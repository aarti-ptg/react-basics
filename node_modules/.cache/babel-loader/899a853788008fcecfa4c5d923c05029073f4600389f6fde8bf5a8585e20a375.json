{"ast":null,"code":"var _jsxFileName = \"/Users/aartiitikirala/react-ts-spa/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Define the type for a user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState('');\n  const handleAddUser = () => {\n    if (name.trim()) {\n      // Add the new user to the users list\n      setUsers(prevUsers => [...prevUsers, {\n        id: Date.now(),\n        name\n      }]);\n      setName(''); // Clear the input field\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User List App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter user's name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddUser,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mi8HOjwEfgeftqin3zjxXBwPgPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","users","setUsers","name","setName","handleAddUser","trim","prevUsers","id","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","user","_c","$RefreshReg$"],"sources":["/Users/aartiitikirala/react-ts-spa/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Define the type for a user\ntype User = {\n  id: number;\n  name: string;\n};\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [name, setName] = useState<string>('');\n\n  const handleAddUser = () => {\n    if (name.trim()) {\n      // Add the new user to the users list\n      setUsers((prevUsers) => [...prevUsers, { id: Date.now(), name }]);\n      setName(''); // Clear the input field\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>User List App</h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter user's name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button onClick={handleAddUser}>Add User</button>\n        </div>\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.name}</li>\n          ))}\n        </ul>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAE5C,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,IAAI,CAACG,IAAI,CAAC,CAAC,EAAE;MACf;MACAJ,QAAQ,CAAEK,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEP;MAAK,CAAC,CAAC,CAAC;MACjEC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf;EACF,CAAC;;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA;QAAAc,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBlB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UACEmB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BC,KAAK,EAAEhB,IAAK;UACZiB,QAAQ,EAAGC,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACFlB,OAAA;UAAQyB,OAAO,EAAElB,aAAc;UAAAO,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNlB,OAAA;QAAAc,QAAA,EACGX,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACd3B,OAAA;UAAAc,QAAA,EAAmBa,IAAI,CAACtB;QAAI,GAAnBsB,IAAI,CAACjB,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjCID,GAAa;AAAA2B,EAAA,GAAb3B,GAAa;AAmCnB,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}